## Spin Helper v1.16.0

# Slots (auto) - Issues/fixes and suggestions:
1. First click does not occur or is delayed. Potentially needs a grace click (that isn't counted) to first move the mouse to the click point, second to detect button readiness and third to initiate a click. This function needs to ignore the "hey click me" animation (it occurs every 10-15 seconds to capture the gamers attention). This is a false readiness state and must not be counted as a spin/click. The readiness of the button should be detectable only after the first click determines that the button has gone through the "ready->not ready..." state. The difference is often that the button is either grey or black during a spin, the "hey click me" animation is a half spin and must be ignored. In simple terms, when the button to start clicking is pressed, the app must initiate a sequence of events to count a successful spin. The logic is not time-based but entirely dependent on the button's state. First, the app needs to confirm the spin button is in a 'ready' state. After the button is clicked, it must transition from 'ready' to 'not ready', indicating the start of a spin. Only after the button transitions back to 'ready' can the app confirm that the spin is complete and count it. This full ready -> not ready -> ready cycle is the only condition for a spin to be considered successful.
2. We must implement (as did the original v1.14.0 code) a method that detects excessive mouse movement and applies a PAUSE only after a click/spin has finished. Small mouse movements should not count (see old code) as the user may want to move the mouse to the STOP button to stop the app, at this (when the mouse is moved far enough away from the capture/click point) moment a pause should occur. There should be no pop-ups for PAUSE/STOP, user's decision is final. The user should be able to resume at the last point by clicking Start Auto Spins (or rename it 'Resume Auto Spins' if a pause was detected previously in this session), the 'Reset' button resets the spin count, as it should, but Pressing Reset again should reset the calculations too.
3. In the Slots Target Calulator, if the user enters an Amount (£), Wagering X and Bet/Spin (£) the total wagering and target spins is shown. However, when Start Auto Spins is clicked and the total spin count is met during a run, the app continues to click/spin. The app SHOULD STOP at the target spin value AND/OR when the target wagering amount is met. This is to prevent the user from wagering more than they need. 
4. In a similar vain, in the Slots Target Calulator, if the user enters an Amount (£), Wagering X and Bet/Spin (£) the total wagering and target spins is shown but we also need to show the current wager calculation (which i believe is current spin count + Bet/Spin (£) value in 2 decimal places).
5. In Automation Controls, next to Stop, we need a Pause button (but mouse movement, as in point 2 above, will execute the pause gracefully for us during spins).
6. Spinner Button Detection should be moved to Environment Setup and be used across our features (Slots, Roulette and Clicker) and have a small picture of the captured image. 

# Clicker - Issues/fixes and suggestions:
1. In Automatic and in Manual, Start Auto and Single Click needs the same pre-click grace and spin detection that point 1 above in "Slots (auto) - Issues/fixes and suggestions" requires. Infact, we need this UNIVERSALLY across all features that use the spin detection functionality.

# General
1. We need to create a streamlined, one-time onboarding experience for permission requests upon the app's initial launch. The goal is to avoid forcing the user to navigate back and forth between the app and their Mac/Windows system settings. Instead of a piecemeal approach, the app should sequentially present all necessary permission prompts—including those for screenshots, accessibility (mouse control), input monitoring, and screen recording—in a single, unified flow. This process should feel seamless to the user, similar to how major apps handle multiple permission requests sequentially. Additionally, we need to address the persistent issue with the screenshot permission (Mac), as it currently prompts the user every time. We need to find a way to request this permission just once and ensure it persists for future use.